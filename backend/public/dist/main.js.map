{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/common/interceptor/interceptor.service.ts","webpack:///./src/app/common/message-reset-password/message-reset-password.component.html","webpack:///./src/app/common/message-reset-password/message-reset-password.component.scss","webpack:///./src/app/common/message-reset-password/message-reset-password.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;;;AClCkD;AACM;AAOxD;IACE,sBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,+BAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,GAAG;YAC/B,IAAI,CAAC,CAAC,GAAG,YAAY,6DAAa,CAAC,EAAE;gBACnC,OAAO;aACR;YACD,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,YAAY;QALxB,+DAAS,CAAC;YACT,2BAA2B;YAC3B,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,iCAAiC;SAC5C,CAAC;yCAE4B,sDAAM;OADvB,YAAY,CAWxB;IAAD,mBAAC;CAAA;AAXwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACqB;AACtC;AACgC;AAC1B;AAE4B;AAC5B;AACM;AACX;AAEO;AACjD,gFAAgF;AAEP;AACwC;AA0BjH;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxBrB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,uEAAa;gBACb,6DAAgB;gBAChB,qEAAgB;gBAChB,4FAAuB;gBACvB,mEAAmB,CAAC,OAAO,EAAE;gBAC7B,4DAAY;gBACZ,uDAAY,CAAC,OAAO,EAAE;aACvB;YACD,YAAY,EAAE,CAAC,2DAAY,EAAE,8HAA6B,CAAE;YAC5D,SAAS,EAAE,CAAC;oBAEV,OAAO,EAAE,gEAAgB;oBACzB,QAAQ,EAAE,oEAAoB;iBAC/B;gBACD;oBACE,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,sFAAa;oBACvB,KAAK,EAAE,IAAI;iBACZ,CAAC;YAEF,SAAS,EAAE,CAAE,2DAAY,CAAE;SAC5B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACzCmB;AACc;AAC0D;AAE1G,IAAM,MAAM,GAAW;IAG5B;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,OAAO;QACnB,SAAS,EAAE,MAAM;KAClB;IACD,EAAE,IAAI,EAAG,OAAO,EAAE,YAAY,EAAG,gEAAgE,EAAC;IAClG;QAEE,IAAI,EAAG,MAAM,EAAE,YAAY,EAAG,sDAAsD;QACpF,IAAI,EAAE;YACJ,KAAK,EAAE,YAAY;SACpB;KACF;IACD;QACE,IAAI,EAAG,uBAAuB,EAAE,SAAS,EAAG,6HAA6B;KAC1E;CAGF,CAAC;AAMF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE;YACzC,OAAO,EAAE,CAAE,4DAAY,CAAE;SAC1B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AC9Bc;AAK3C;IAEI;IAAgB,CAAC;IACjB,iCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAElD,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,cAAc,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC/B,UAAU,EAAE;oBACR,cAAc,EAAE,kBAAkB;oBAClC,aAAa,EAAE,YAAU,IAAI,CAAC,KAAO;iBACxC;aACJ,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;SACrC;aACI;YAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC/B;IACL,CAAC;IACD,+BAAO,GAAP;QACI,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;IAvBQ,aAAa;QADzB,gEAAU,EAAE;;OACA,aAAa,CAwBzB;IAAD,oBAAC;CAAA;AAxByB;;;;;;;;;;;;ACN1B,yLAAyL,kBAAkB,mBAAmB,uBAAuB,sBAAsB,gCAAgC,8LAA8L,kI;;;;;;;;;;;ACAze,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gDAAQ,GAAR;IACA,CAAC;IALU,6BAA6B;QALzC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;;;SAGvC,CAAC;;OACW,6BAA6B,CAOzC;IAAD,oCAAC;CAAA;AAPyC;;;;;;;;;;;;;ACP1C;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,YAAY,EAAE,wBAAwB,CAAC,OAAO;IAC9C,0DAA0D;CAE3D,CAAC;;;;;;;;;;;;;ACVF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"../super-admin/super-admin.module\": [\n\t\t\"./src/app/super-admin/super-admin.module.ts\",\n\t\t\"common-signup-signin-signup-signin-module~super-admin-super-admin-module\",\n\t\t\"super-admin-super-admin-module\"\n\t],\n\t\"./auth-gateway/auth-gateway.module\": [\n\t\t\"./src/app/auth-gateway/auth-gateway.module.ts\",\n\t\t\"auth-gateway-auth-gateway-module\"\n\t],\n\t\"./common/signup-signin/signup-signin.module\": [\n\t\t\"./src/app/common/signup-signin/signup-signin.module.ts\",\n\t\t\"common-signup-signin-signup-signin-module~super-admin-super-admin-module\",\n\t\t\"common-signup-signin-signup-signin-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  // tslint:disable-next-line\n  selector: 'body',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent implements OnInit {\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AppBreadcrumbModule} from '@coreui/angular';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app.routing';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { MyInterceptor } from './common/interceptor/interceptor.service';\nimport { MessageResetPasswordComponent } from './common/message-reset-password/message-reset-password.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AppBreadcrumbModule.forRoot(),\n    RouterModule,\n    ToastrModule.forRoot()\n  ],\n  declarations: [AppComponent, MessageResetPasswordComponent ],\n  providers: [{\n   \n    provide: LocationStrategy,\n    useClass: HashLocationStrategy,\n  },\n  { //for interceptors it is must\n    provide: HTTP_INTERCEPTORS,\n    useClass: MyInterceptor,\n    multi: true\n  }],\n  \n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MessageResetPasswordComponent } from './common/message-reset-password/message-reset-password.component';\n\nexport const routes: Routes = [\n\n \n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  },\n  { path : \"login\" ,loadChildren : \"./common/signup-signin/signup-signin.module#SignupSigninMoudle\"},\n  {\n    \n    path : \"auth\" ,loadChildren : \"./auth-gateway/auth-gateway.module#AuthGatewayModule\",\n    data: {\n      title: 'superadmin'\n    },\n  },\n  {\n    path : \"message_resetpassword\", component : MessageResetPasswordComponent\n  },\n \n     \n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class MyInterceptor implements HttpInterceptor {\n    public token: any;\n    constructor() { }\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        this.setUser();\n\n        if (this.token) {\n            let req_with_token = request.clone({\n                setHeaders: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${this.token}`\n                }\n            });\n            return next.handle(req_with_token)\n        }\n        else {\n\n            return next.handle(request);\n        }\n    }\n    setUser() {\n        this.token = localStorage.getItem('token');\n    }\n}","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\"style=\\\"padding-top:40px\\\">\\n\\n \\n  <div class=\\\"col-sm-1\\\">\\n  </div>\\n  <div class=\\\"col-sm-11\\\" style=\\\"color: black;\\n  height: 500px;\\n  border: groove;\\n  text-align: center;\\n  padding-top: 40px;\\n  background-color: cadetblue;\\n\\\">\\n    <h1 style=\\\"color:red\\\">Thank You!!</h1>\\n    <h3>Your Reset password link has been sent to your Registered email address.</h3>\\n    <a class=\\\" btn btn-link\\\" style=\\\"color:blue; padding-right:10px\\\" [routerLink]=\\\"['/login']\\\">\\n      Click here to return to login page\\n     </a>\\n  </div>\\n</div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-message-reset-password',\n  templateUrl: './message-reset-password.component.html',\n  styleUrls: ['./message-reset-password.component.scss']\n})\nexport class MessageResetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  API_ENDPOINT: 'http://localhost:3503/' //local\n  // API_ENDPOINT: 'http://54.71.18.74:3503/' // staging URL\n\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}