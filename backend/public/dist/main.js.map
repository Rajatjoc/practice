{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/common/interceptor/interceptor.service.ts","webpack:///./src/app/common/message-reset-password/message-reset-password.component.html","webpack:///./src/app/common/message-reset-password/message-reset-password.component.scss","webpack:///./src/app/common/message-reset-password/message-reset-password.component.ts","webpack:///./src/app/super-admin/services/profileservice.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"../super-admin/super-admin.module\": [\n\t\t\"./src/app/super-admin/super-admin.module.ts\",\n\t\t\"common-signup-signin-signup-signin-module~super-admin-super-admin-module\",\n\t\t\"common\",\n\t\t\"super-admin-super-admin-module\"\n\t],\n\t\"./auth-gateway/auth-gateway.module\": [\n\t\t\"./src/app/auth-gateway/auth-gateway.module.ts\",\n\t\t\"common\",\n\t\t\"auth-gateway-auth-gateway-module\"\n\t],\n\t\"./common/signup-signin/signup-signin.module\": [\n\t\t\"./src/app/common/signup-signin/signup-signin.module.ts\",\n\t\t\"common-signup-signin-signup-signin-module~super-admin-super-admin-module\",\n\t\t\"common\",\n\t\t\"common-signup-signin-signup-signin-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { ProfileserviceService } from './super-admin/services/profileservice.service'\n\n@Component({\n  // tslint:disable-next-line\n  selector: 'body',\n  template: ` <block-ui>\n       <router-outlet></router-outlet>\n  </block-ui>`\n})\nexport class AppComponent implements OnInit {\n  public userName : any;\n  constructor(private router: Router,\n              private ProfileserviceService : ProfileserviceService) { }\n\n  ngOnInit() {\n\n    if (localStorage.getItem(\"token\")) { \n      this.ProfileserviceService.getProfile().subscribe(res => {\n        if(res['code'] == 200)\n        {     \n        // this.userName = res.data.firstName;\n        // localStorage.setItem(\"userName\", this.userName);\n        }\n        else if(!res.status && res.code == 401 )\n        {\n         \n          localStorage.removeItem(\"token\");\n          this.router.navigate([\"login\"]);\n        }\n       \n\n      });\n      // this.router.navigate([\"auth\"]);\n    }\n\n\n\n\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { NgxPaginationModule } from 'ngx-pagination'; // <-- import the module\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AppBreadcrumbModule} from '@coreui/angular';\nimport { ToastrModule } from 'ngx-toastr';\nimport {TreeTableModule} from \"ng-treetable\";\nimport { AppRoutingModule } from './app.routing';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { MyInterceptor } from './common/interceptor/interceptor.service';\nimport { MessageResetPasswordComponent } from './common/message-reset-password/message-reset-password.component';\nimport { BlockUIModule } from 'ng-block-ui';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AppBreadcrumbModule.forRoot(),\n    RouterModule,\n    ToastrModule.forRoot(),\n    BlockUIModule.forRoot(),\n    TreeTableModule,\n    NgxPaginationModule ,\n \n  ],\n  declarations: [AppComponent, MessageResetPasswordComponent ],\n  providers: [{\n   \n    provide: LocationStrategy,\n    useClass: HashLocationStrategy,\n  },\n  { //for interceptors it is must\n    provide: HTTP_INTERCEPTORS,\n    useClass: MyInterceptor,\n    multi: true\n  }],\n  \n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MessageResetPasswordComponent } from './common/message-reset-password/message-reset-password.component';\n\nexport const routes: Routes = [\n\n \n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  },\n  { path : \"login\" ,loadChildren : \"./common/signup-signin/signup-signin.module#SignupSigninMoudle\"},\n  {\n    \n    path : \"auth\" ,loadChildren : \"./auth-gateway/auth-gateway.module#AuthGatewayModule\",\n    data: {\n      title: ''\n    },\n  },\n  {\n    path : \"message_resetpassword\", component : MessageResetPasswordComponent\n  },\n \n     \n];\n\n@NgModule({\n  \n  imports: [ RouterModule.forRoot(routes, {useHash: false}) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class MyInterceptor implements HttpInterceptor {\n    public token: any;\n    constructor() { }\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        this.setUser();\n\n        if (this.token) {\n            let req_with_token = request.clone({\n                setHeaders: {\n                    'Accept': 'application/json',\n                    // 'Content-Type': 'application/json',\n                    Authorization: `Bearer ${this.token}`\n                }\n            });\n            return next.handle(req_with_token)\n        }\n        else {\n            console.log('Not Authorised');\n            \n            return next.handle(request);\n        }\n    }\n    setUser() {\n        this.token = localStorage.getItem('token');\n    }\n}","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\"style=\\\"padding-top:40px\\\">\\n\\n \\n  <div class=\\\"col-sm-1\\\">\\n  </div>\\n  <div class=\\\"col-sm-11\\\" style=\\\"color: black;\\n  height: 500px;\\n  border: groove;\\n  text-align: center;\\n  padding-top: 40px;\\n  background-color: cadetblue;\\n\\\">\\n    <h1 style=\\\"color:red\\\">Thank You!!</h1>\\n    <h3>Your Reset password link has been sent to your Registered email address.</h3>\\n    <a class=\\\" btn btn-link\\\" style=\\\"color:blue; padding-right:10px\\\" [routerLink]=\\\"['/login']\\\">\\n      Click here to return to login page\\n     </a>\\n  </div>\\n</div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-message-reset-password',\n  templateUrl: './message-reset-password.component.html',\n  styleUrls: ['./message-reset-password.component.scss']\n})\nexport class MessageResetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '.././../../environments/environment';\nimport { Subject } from \"rxjs/Subject\";\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProfileserviceService {\n  newHeaders:any\n  private setImage = new Subject<any>();\n  private setName = new Subject<any>();\n  setHeaders:any\n  private apiUrl = environment.API_ENDPOINT;\n  constructor(private httpClient: HttpClient) {\n    this.newHeaders = {\n      'Accept': 'application/json'\n    }\n  }\n  getProfile(): Observable<any> {\n    return this.httpClient.get(this.apiUrl + \"users/getProfile\");\n  }\n  // setProfileImage(profileImage) {\n  //   console.log(\">>>>>>>>>> himani///////\", profileImage)\n  //   // this.userData =  JSON.parse(localStorage.getItem('userName'));\n  //   this.setImage.next({ profileImage: profileImage });\n  //   console.log(\">>>>>>>>>>>\", profileImage)\n  //   this.setImage.next({ profileImage: localStorage.getItem(\"image\") \n  //   ,username: localStorage.getItem(\"headerName\")});\n  //   // this.setImage.next({ username: localStorage.getItem(\"headerName\")});\n  // }\n\n  // getProfileImage(): Observable<any> {\n  //   console.log(this.setImage);\n  //    this.setImage.next({ profileImage: localStorage.getItem(\"image\") ,username: localStorage.getItem(\"headerName\")});\n  //   //  this.setImage.next({ username: localStorage.getItem(\"headerName\")});\n    \n    \n  //   return this.setImage.asObservable();\n  // }\n  setProfileImage(profileImage) {\n    console.log(\"hello i am here\")\n    this.setImage.next({ profileImage: profileImage });\n  }\n\n  getProfileImage(): Observable<any> {\n    return this.setImage.asObservable();\n  }\n  setProfileName(name) {\n    console.log(\"hello i am here\")\n\n    this.setName.next({ name: name });\n  }\n\n  getProfileName(): Observable<any> {\n    return this.setName.asObservable();\n  }\n  updateProfile(data): Observable<any> {\n   \n    return this.httpClient.post(this.apiUrl + \"users/updateProfile\",{data});\n  \n  }\n  uploadImage(formData):Observable<any>{\n    let requestData = { 'profileData': formData }\n    return this.httpClient.post(this.apiUrl + \"users/uploadProfilePic\" ,formData)\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  // API_ENDPOINT: 'http://localhost:3503/' //local\n  API_ENDPOINT: 'http://54.71.18.74:3503/' // staging URL\n\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}