{"version":3,"sources":["webpack:///./src/app/common/services/authguard.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAsD;AACX;AACO;AAEgB;AAElE;IAEE,yBAAoB,UAAsB,EAAU,MAAe;QAA/C,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAS;QAD3D,WAAM,GAAG,qEAAW,CAAC,YAAY,CAAC;IAE1C,CAAC;IACD,qCAAW,GAAX;QACE,OAAO,IAAI,CAAC;QACd,sDAAsD;QACtD,2BAA2B;QAC3B,mBAAmB;QACnB,WAAW;QACX,2BAA2B;QAC3B,4CAA4C;QAC5C,oBAAoB;QACpB,MAAM;QACN,OAAO;QACP,mBAAmB;QACnB,iBAAiB;QACjB,UAAU;QACV,mCAAmC;QACnC,sCAAsC;QACtC,oBAAoB;QACpB,MAAM;QAEJ,uCAAuC;QACvC,iBAAiB;QACjB,IAAI;QACJ,SAAS;QACT,qCAAqC;QACrC,IAAI;IACN,CAAC;IACD,mCAAS,GAAT;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC,CAAC;IAC9D,CAAC;IAhCU,eAAe;QAD3B,gEAAU,EAAE;yCAGqB,+DAAU,EAAmB,sDAAM;OAFxD,eAAe,CAkC3B;IAAD,sBAAC;CAAA;AAlC2B","file":"common.js","sourcesContent":["import { CanActivate, Router } from \"@angular/router\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '.././../../environments/environment';\n@Injectable()\nexport class AlwaysAuthGuard implements CanActivate {\n  private apiUrl = environment.API_ENDPOINT;\n  constructor(private httpClient :HttpClient, private router : Router) {\n  }\n  canActivate() {\n    return true;\n  //  let authorised = this.checkauth().subscribe(res=>{\n  //     if(res.code == 200){\n  //     return true;\n  //   }else{\n  //     console.log(\"Herer\")\n  //     this.router.navigate(['login'])      \n  //     return false;\n  //   }\n  //   })\n  //   if(authorised)\n  //   return true;\n  //   else{\n  //     console.log(\"Inside logout\")\n  //     this.router.navigate(['login'])\n  //     return false;\n  //   }\n    \n    // if (localStorage.getItem(\"token\")) {\n    //   return true;\n    // }\n    // else {\n    //   this.router.navigate([\"login\"]);\n    // }\n  }\n  checkauth():Observable<any>{\n    return this.httpClient.get(this.apiUrl + \"users/checkauth\");\n  }\n \n}\n"],"sourceRoot":""}